Question 1: gcloud version

gcloud --version
Google Cloud SDK c
bq 2.0.72
core 2022.01.14
gsutil 5.6

Question 2: terraform apply

terraform init

Initializing the backend...

Initializing provider plugins...
- Reusing previous version of hashicorp/google from the dependency lock file
- Using previously-installed hashicorp/google v4.7.0

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
(base) tatanakuprianova@MacBook-Pro-Tatana learn-terraform-gcp % terraform plan
var.project
  theta-gizmo-339119

  Enter a value: theta-gizmo-339119

google_bigquery_dataset.dataset: Refreshing state... [id=projects/theta-gizmo-339119/datasets/trips_data_all]

Note: Objects have changed outside of Terraform

Terraform detected the following changes made outside of Terraform since the
last "terraform apply":

  # google_bigquery_dataset.dataset has changed
  ~ resource "google_bigquery_dataset" "dataset" {
        id                              = "projects/theta-gizmo-339119/datasets/trips_data_all"
      + labels                          = {}
        # (10 unchanged attributes hidden)

        # (4 unchanged blocks hidden)
    }


Unless you have made equivalent changes to your configuration, or ignored the
relevant attributes using ignore_changes, the following plan may include
actions to undo or respond to these changes.

───────────────────────────────────────────────────────────────────────────────

Terraform used the selected providers to generate the following execution plan.
Resource actions are indicated with the following symbols:
  + create
  ~ update in-place

Terraform will perform the following actions:

  # google_bigquery_dataset.dataset will be updated in-place
  ~ resource "google_bigquery_dataset" "dataset" {
      - default_partition_expiration_ms = 5184000000 -> null
      - default_table_expiration_ms     = 5184000000 -> null
        id                              = "projects/theta-gizmo-339119/datasets/trips_data_all"
        # (9 unchanged attributes hidden)

        # (4 unchanged blocks hidden)
    }

  # google_storage_bucket.data-lake-bucket will be created
  + resource "google_storage_bucket" "data-lake-bucket" {
      + force_destroy               = true
      + id                          = (known after apply)
      + location                    = "EUROPE-WEST6"
      + name                        = "dtc_data_lake_theta-gizmo-339119"
      + project                     = (known after apply)
      + self_link                   = (known after apply)
      + storage_class               = "STANDARD"
      + uniform_bucket_level_access = true
      + url                         = (known after apply)

      + lifecycle_rule {
          + action {
              + type = "Delete"
            }

          + condition {
              + age                   = 30
              + matches_storage_class = []
              + with_state            = (known after apply)
            }
        }

      + versioning {
          + enabled = true
        }
    }

Plan: 1 to add, 1 to change, 0 to destroy.

───────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
(base) tatanakuprianova@MacBook-Pro-Tatana learn-terraform-gcp % terraform applay
Terraform has no command named "applay". Did you mean "apply"?

To see all of Terraform's top-level commands, run:
  terraform -help

(base) tatanakuprianova@MacBook-Pro-Tatana learn-terraform-gcp % terraform apply
var.project
  theta-gizmo-339119

  Enter a value: theta-gizmo-339119

google_bigquery_dataset.dataset: Refreshing state... [id=projects/theta-gizmo-339119/datasets/trips_data_all]

Note: Objects have changed outside of Terraform

Terraform detected the following changes made outside of Terraform since the
last "terraform apply":

  # google_bigquery_dataset.dataset has changed
  ~ resource "google_bigquery_dataset" "dataset" {
        id                              = "projects/theta-gizmo-339119/datasets/trips_data_all"
      + labels                          = {}
        # (10 unchanged attributes hidden)

        # (4 unchanged blocks hidden)
    }


Unless you have made equivalent changes to your configuration, or ignored the
relevant attributes using ignore_changes, the following plan may include
actions to undo or respond to these changes.

───────────────────────────────────────────────────────────────────────────────

Terraform used the selected providers to generate the following execution plan.
Resource actions are indicated with the following symbols:
  + create
  ~ update in-place

Terraform will perform the following actions:

  # google_bigquery_dataset.dataset will be updated in-place
  ~ resource "google_bigquery_dataset" "dataset" {
      - default_partition_expiration_ms = 5184000000 -> null
      - default_table_expiration_ms     = 5184000000 -> null
        id                              = "projects/theta-gizmo-339119/datasets/trips_data_all"
        # (9 unchanged attributes hidden)

        # (4 unchanged blocks hidden)
    }

  # google_storage_bucket.data-lake-bucket will be created
  + resource "google_storage_bucket" "data-lake-bucket" {
      + force_destroy               = true
      + id                          = (known after apply)
      + location                    = "EUROPE-WEST6"
      + name                        = "dtc_data_lake_theta-gizmo-339119"
      + project                     = (known after apply)
      + self_link                   = (known after apply)
      + storage_class               = "STANDARD"
      + uniform_bucket_level_access = true
      + url                         = (known after apply)

      + lifecycle_rule {
          + action {
              + type = "Delete"
            }

          + condition {
              + age                   = 30
              + matches_storage_class = []
              + with_state            = (known after apply)
            }
        }

      + versioning {
          + enabled = true
        }
    }

Plan: 1 to add, 1 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

google_storage_bucket.data-lake-bucket: Creating...
google_bigquery_dataset.dataset: Modifying... [id=projects/theta-gizmo-339119/datasets/trips_data_all]
google_bigquery_dataset.dataset: Modifications complete after 1s [id=projects/theta-gizmo-339119/datasets/trips_data_all]
google_storage_bucket.data-lake-bucket: Creation complete after 2s [id=dtc_data_lake_theta-gizmo-339119]

Apply complete! Resources: 1 added, 1 changed, 0 destroyed.
(base) tatanakuprianova@MacBook-Pro-Tatana learn-terraform-gcp % 


Question 3: Count records

select count(1) from yellow_taxi_trips
where cast(tpep_pickup_datetime as DATE) = '2021-01-15'

Question 4: Largest tip for each day

select max(tip_amount), cast(tpep_pickup_datetime as DATE)
from yellow_taxi_trips
group by cast(tpep_pickup_datetime as DATE)
order by max(tip_amount) desc

Question 5: Most popular destination 

select*
from(
select t1."DOLocationID", count(1) as cnt
from yellow_taxi_trips t1
join zone t2
on t1."PULocationID" = t2."LocationID"
where cast(t1."tpep_pickup_datetime" as DATE) = '2021-01-14' and t2."Zone" = 'Central Park'
group by t1."DOLocationID"
order by cnt desc) t3
join zone t4
on t3."DOLocationID"= t4."LocationID"
order by t3."cnt" desc

Question 6: Most expensive route 

select*
from(select "PULocationID", "DOLocationID", avg(total_amount) as avg
from yellow_taxi_trips
group by "PULocationID", "DOLocationID"
order by avg desc) t1
join zone t2
on t1."PULocationID"=t2."LocationID"
join zone t3
on t1."DOLocationID"=t3."LocationID"
